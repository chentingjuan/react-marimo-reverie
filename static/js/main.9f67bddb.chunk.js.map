{"version":3,"sources":["sketches/sketch.js","sketches/tab2.js","App.js","reportWebVitals.js","index.js"],"names":["sketch","p5","user","sh","props","windowWidth","windowHeight","WEBGL","colors","split","map","a","marimos","numOfMarimos","nutritions","numOfNutritions","bubbles","userColor","myCustomRedrawAccordingToNewPropsHandler","theProps","setup","createCanvas","Math","floor","dep","max","ortho","noStroke","createShader","shader","setUniform","i","push","Marimo","position","createVector","random","vector","constructor","Vector","random2D","radius","color","length","Nutrition","User","draw","background","frameCount","forEach","m","update","chewing","chewingTimer","filter","n","eaten","dist","sub","copy","add","offset","p","v","r","opacity","b","drawSphere","x","noise","y","setNumOfMarimos","params","this","mult","abs","delta","setMag","maxVector","set","eatenable","dx","mouseX","dy","mouseY","uniformName","colStr","colArray","_array","pop","setCol","translate","sphere","App","useState","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAGe,SAASA,EAAOC,GAC7B,IAGIC,EAKAC,EACAC,EATIC,EAAqCJ,EAArCI,YAAaC,EAAwBL,EAAxBK,aAAcC,EAAUN,EAAVM,MAC/BC,EAAS,mDAAmDC,MAAM,KAAKC,KAAI,SAAAC,GAAC,MAAE,IAAIA,KAClFC,EAAU,GAAIC,EAAe,GAAIC,EAAa,GAAIC,EAAkB,EAEpEC,EAAU,GAERC,EAAY,UAUlBhB,EAAGiB,yCAA2C,SAACC,GAC7Cf,EAAQe,GAMVlB,EAAGmB,MAAQ,WACTnB,EAAGoB,aAAahB,EAAaC,EAAcC,GAE3CM,EAAeS,KAAKC,MAAMlB,EAAYC,EAAa,KACnDS,EAAkBO,KAAKC,MAAMlB,EAAYC,EAAa,KACtD,IAAIkB,EAAMvB,EAAGwB,IAAIpB,EAAYC,GAC7BL,EAAGyB,OAAOrB,EAAc,EAAGA,EAAc,GAAIC,EAAe,EAAGA,EAAe,EAAQ,GAAJkB,EAAY,IAAJA,GAC1FvB,EAAG0B,WAGHxB,EAAKF,EAAG2B,aCrCJ,oqBA+BA,usDDOJ3B,EAAG4B,OAAO1B,GACVA,EAAG2B,WAAW,eAAgB,CAACzB,EAAYC,IAC3CH,EAAG2B,WAAW,aAAc,CAAC,EAAE,GAAG,IAElClB,EAAQ,GACR,IAAI,IAAImB,EAAE,EAAGA,EAAElB,EAAckB,IAC3BnB,EAAQoB,KAAK,IAAIC,EAAO,CACtBC,SAAUjC,EAAGkC,aAAalC,EAAGmC,QAAQ/B,EAAY,EAAGA,EAAY,GAAIJ,EAAGmC,QAAQ9B,EAAa,EAAGA,EAAa,IAC5G+B,OAAQpC,EAAGqC,YAAYC,OAAOC,WAC9BC,OAAQxC,EAAGmC,OAAO,GAAI,IACtBM,MAAOlC,EAAOc,KAAKC,MAAMtB,EAAGmC,OAAO5B,EAAOmC,aAI9C7B,EAAW,GACX,IAAI,IAAIiB,EAAE,EAAGA,EAAEhB,EAAiBgB,IAC9BjB,EAAWkB,KAAK,IAAIY,EAAU,CAC5BV,SAAUjC,EAAGkC,aAAalC,EAAGmC,QAAQ/B,EAAY,EAAGA,EAAY,GAAIJ,EAAGmC,QAAQ9B,EAAa,EAAGA,EAAa,OAIhHJ,EAAO,IAAI2C,GAGb5C,EAAG6C,KAAO,WAGR,GAFA7C,EAAG8C,WAAW,WAEV9C,EAAG+C,WAAa,KAAO,EAAG,CAC5B,IAAId,EAAWjC,EAAGkC,aAAalC,EAAGmC,QAAQ/B,EAAY,EAAGA,EAAY,GAAIJ,EAAGmC,QAAQ9B,EAAa,EAAGA,EAAa,IACjHQ,EAAWkB,KAAK,IAAIY,EAAU,CAC5BV,cAKJtB,EAAQqC,SAAQ,SAAAC,GA4Cd,GA3CAA,EAAEC,SACFD,EAAEJ,OACCI,EAAEE,SAASF,EAAEG,eACbH,EAAEG,cAAc,IACjBH,EAAEE,SAAQ,EACVF,EAAEG,aAtEY,KA0EhBvC,EAAWwC,QAAO,SAAAC,GAAC,OAAKA,EAAEC,SAAOP,SAAQ,SAAAM,GACpCL,EAAEhB,SAASuB,KAAKF,EAAErB,WAAWgB,EAAET,OAAOc,EAAEd,QAAQ,IACjDS,EAAET,QAAQ,EACVc,EAAEC,OAAM,MAKTtD,EAAKuC,OAAO,IACTS,EAAEE,SAAWF,EAAEhB,SAASuB,KAAKvD,EAAKgC,WAAWgB,EAAET,OAAOvC,EAAKuC,QAAQ,IACrES,EAAET,QAAQ,EACVS,EAAEE,SAAU,EACZlD,EAAKuC,QAAQ,GASdS,EAAET,OAAO,KAEVS,EAAET,OAAO,GACTS,EAAEhB,SAASwB,IAAI,GAAI,GACnB9C,EAAQoB,KAAK,IAAIC,EAAO,CACtBC,SAAUgB,EAAEhB,SAASyB,OAAOC,IAAI,GAAI,GACpCvB,OAAQpC,EAAGkC,aAAa,EAAG,GAC3BM,OAAQ,GACRC,MAAOQ,EAAER,UAKTzC,EAAGmC,SAAS,IAAK,CACnB,IAAIyB,EAAS5D,EAAGmC,QAAQc,EAAET,OAAQS,EAAET,QACpCzB,EAAQgB,KAAK,CACX8B,EAAGZ,EAAEhB,SAASyB,OAAOC,IAAIC,GACzBE,EAAG9D,EAAGkC,aAAa,EAAGlC,EAAGmC,QAAQ,IAAK,IACtC4B,EAAG/D,EAAGmC,OAAO,EAAE,GACf6B,QAAShE,EAAGmC,OAAO,GAAK,WAM9BtB,EAAWwC,QAAO,SAAAC,GAAC,OAAKA,EAAEC,SAAOP,SAAQ,SAAAM,GACvCA,EAAET,OAGC5C,EAAKgC,SAASuB,KAAKF,EAAErB,WAAWhC,EAAKuC,OAAOc,EAAEd,QAAQ,IACvDvC,EAAKuC,QAAQ,EACbc,EAAEC,OAAM,MAKZxC,EAAQiC,SAAQ,SAAAiB,GACdC,EAAWlE,EAAGyC,MAAM,KAAMzC,EAAGkC,aAAa+B,EAAEJ,EAAEM,EAAInE,EAAGoE,MAAMH,EAAEJ,EAAEQ,EAAE,IAAIJ,EAAEF,EAAE,EAAGE,EAAEJ,EAAEQ,EAAG,KAAMJ,EAAEF,GACzFE,EAAEJ,EAAEQ,GAAGJ,EAAEH,EAAEO,KAEftD,EAAUA,EAAQsC,QAAO,SAAAY,GAAC,OAAEA,EAAEJ,EAAEQ,GAAGhE,EAAa,KAEhDJ,EAAKiD,SACLjD,EAAK4C,OAEL1C,EAAMmE,gBAAgB3D,EAAQ+B,SAlJC,IAqJ3BV,EArJ2B,WAsJ/B,WAAYuC,GAAS,oBACnBC,KAAKvC,SAAWsC,EAAOtC,SACvBuC,KAAKpC,OAASmC,EAAOnC,OACrBoC,KAAKhC,OAAS+B,EAAO/B,OACrBgC,KAAK/B,MAAQ8B,EAAO9B,MACpB+B,KAAKrB,SAAU,EACfqB,KAAKpB,aAtJW,IANa,wCA+J/B,WACEc,EAAWM,KAAKrB,QAAQnC,EAAUwD,KAAK/B,MAAO+B,KAAKvC,SAAUuC,KAAKhC,UAhKrC,oBAkK/B,WAAU,IAAD,OACPgC,KAAKvC,SAAS0B,IAAIa,KAAKpC,QACpBpC,EAAG+C,WAAW,MAAM,GAAGyB,KAAKpC,OAAOqC,KAAK,IAGxCzE,EAAG0E,IAAIF,KAAKvC,SAASkC,GAAK/D,EAAY,IAAGoE,KAAKpC,OAAO+B,GAAK,IAAIK,KAAKpC,OAAO+B,GAC1EnE,EAAG0E,IAAIF,KAAKvC,SAASoC,GAAKhE,EAAa,IAAGmE,KAAKpC,OAAOiC,GAAK,IAAIG,KAAKpC,OAAOiC,GAG9E1D,EAAQqC,SAAQ,SAAAC,GACd,GAAI,IAAOA,IACL,EAAKhB,SAASuB,KAAKP,EAAEhB,UAAW,EAAKO,OAAOS,EAAET,OAK9C,EAAKP,SAASuB,KAAKP,EAAEhB,WAAW,EAAKO,OAAOS,EAAET,QAAQ,KAAK,CAC7D,IAAImC,EAAQ1B,EAAEhB,SAASyB,OAAOD,IAAI,EAAKxB,UACvC,EAAKG,OAAOqB,IAAIkB,EAAMF,KAAK,IAAKG,OAAO,IACvC3B,EAAEb,OAAOuB,IAAIgB,EAAMF,KAAK,IAAKG,OAAO,QAK1C,IAAMC,EAAY,IACfL,KAAKpC,OAAO+B,EAAIU,IAAWL,KAAKpC,OAAO+B,EAAIU,GAC3CL,KAAKpC,OAAO+B,GAAI,MAAcK,KAAKpC,OAAO+B,GAAI,KAC9CK,KAAKpC,OAAOiC,EAAIQ,IAAWL,KAAKpC,OAAOiC,EAAIQ,GAC3CL,KAAKpC,OAAOiC,GAAI,MAAcG,KAAKpC,OAAOiC,GAAI,SA9LpB,KAkM3B1B,EAlM2B,WAmM/B,WAAY4B,GAAS,oBACnBC,KAAKvC,SAAWsC,EAAOtC,SACvBuC,KAAKhC,OAAS,EACdgC,KAAKjB,OAAM,EAtMkB,wCAwM/B,WACEW,EAlM0C,UAkMfM,KAAKvC,SAAUuC,KAAKhC,UAzMlB,4BA2M/B,WACEgC,KAAKvC,SAAS6C,IAAI9E,EAAGmC,QAAQ/B,EAAY,EAAGA,EAAY,GAAIJ,EAAGmC,QAAQ9B,EAAa,EAAGA,EAAa,QA5MvE,KAgN3BuC,EAhN2B,WAiN/B,WAAY2B,GAAS,oBACnBC,KAAKvC,SAAWjC,EAAGkC,cAAc9B,EAAY,GAAIC,EAAa,GAC9DmE,KAAKhC,OAAS,EACdgC,KAAKO,WAAY,EApNY,wCAsN/B,WACEb,EAAWlD,EAAWwD,KAAKvC,SAAUuC,KAAKhC,UAvNb,oBAyN/B,WACE,IAGIwC,EADUhF,EAAGiF,OAAS7E,EAAY,EACnBoE,KAAKvC,SAASkC,EACjCK,KAAKvC,SAASkC,GAJC,IAIIa,EAEnB,IACIE,EADUlF,EAAGmF,OAAS9E,EAAa,EACpBmE,KAAKvC,SAASoC,EACjCG,KAAKvC,SAASoC,GARC,IAQIa,MAlOU,KA6OjC,SAAShB,EAAWzB,EAAOR,EAAUO,GACnCxC,EAAG+B,OARL,SAAgBH,EAAOwD,EAAYC,GACjC,IACIC,EADMtF,EAAGyC,MAAM4C,GACAE,OACnBD,EAASE,MACT5D,EAAOC,WAAWuD,EAAYE,GAK5BG,CAAOvF,EAAG,QAASuC,GACnBzC,EAAG0F,UAAUzD,GACbjC,EAAG2F,OAAOnD,GACZxC,EAAGwF,O,WE5NQI,MAlBf,WAEE,MAAwCC,mBAAS,GAAjD,mBAAOjF,EAAP,KAAqB0D,EAArB,KAEA,OACE,qCACE,sBAAKwB,UAAU,WAAf,gCACsBlF,KAEtB,cAAC,IAAD,CACEb,OAAQA,EACRuE,gBAAiBA,QCNVyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9f67bddb.chunk.js","sourcesContent":["\nimport { vert, frag } from './tab2';\n\nexport default function sketch(p5) {\n  const { windowWidth, windowHeight, WEBGL } = p5;\n  let colors = \"a2ca3d-81bc3f-5fad41-3e954b-2d8950-1c7c54-48af7e\".split(\"-\").map(a=>\"#\"+a);\n  let marimos = [], numOfMarimos = 10, nutritions = [], numOfNutritions = 5;\n  let user;\n  let bubbles = [], sounds = [];\n  const chewingTime = 300;\n  const userColor = '#219EBC', nutritionColor = '#6B705C';\n  // let _text;\n  let sh;\n  let props;\n\n  // preload = () => {\n  //   // let a = loadSound(\"divided.mp3\");\n  //   // sounds.push(a)\n  // }\n\n  p5.myCustomRedrawAccordingToNewPropsHandler = (theProps) => {\n    props = theProps;\n    // if (props.rotation) {\n    //   rotation = (props.rotation * Math.PI) / 180;\n    // }\n  };\n\n  p5.setup = () => {\n    p5.createCanvas(windowWidth, windowHeight, WEBGL);\n    \n    numOfMarimos = Math.floor(windowWidth*windowHeight/90000);\n    numOfNutritions = Math.floor(windowWidth*windowHeight/90000);\n    let dep = p5.max(windowWidth,windowHeight);\n    p5.ortho(-windowWidth / 2, windowWidth / 2, -windowHeight / 2, windowHeight / 2, -dep*2 , dep*2.5);\n    p5.noStroke();\n    \n    //shader\n    sh = p5.createShader(vert,frag);\n    p5.shader(sh);\n    sh.setUniform(\"u_resolution\", [windowWidth,windowHeight]);\n    sh.setUniform(\"u_lightDir\", [1,1,-1]);\n    \n    marimos=[];\n    for(let i=0; i<numOfMarimos; i++){\n      marimos.push(new Marimo({\n        position: p5.createVector(p5.random(-windowWidth/2, windowWidth/2), p5.random(-windowHeight/2, windowHeight/2)),\n        vector: p5.constructor.Vector.random2D(),\n        radius: p5.random(50, 80),\n        color: colors[Math.floor(p5.random(colors.length))],\n      }));\n    }\n    \n    nutritions=[];\n    for(let i=0; i<numOfNutritions; i++){\n      nutritions.push(new Nutrition({\n        position: p5.createVector(p5.random(-windowWidth/2, windowWidth/2), p5.random(-windowHeight/2, windowHeight/2)),\n      }))\n    }\n    \n    user = new User();\n  }\n\n  p5.draw = () => {\n    p5.background('#DEF0F7');\n    // console.log(windowWidth, windowHeight)\n    if (p5.frameCount % 50 === 0) {\n      let position = p5.createVector(p5.random(-windowWidth/2, windowWidth/2), p5.random(-windowHeight/2, windowHeight/2));\n      nutritions.push(new Nutrition({\n        position\n      }))\n    }\n    \n    // marimos...\n    marimos.forEach(m => {\n      m.update()\n      m.draw()\n      if(m.chewing) m.chewingTimer--;\n      if(m.chewingTimer<=0) {\n        m.chewing=false;\n        m.chewingTimer = chewingTime;\n      }\n      \n      // hit the nutritions\n      nutritions.filter(n => !n.eaten).forEach(n => {\n        if(m.position.dist(n.position)<(m.radius+n.radius)/1) {\n          m.radius+=1;\n          n.eaten=true;\n        }\n      })\n      \n      // hit user\n      if(user.radius>1) {\n        if(!m.chewing && m.position.dist(user.position)<(m.radius+user.radius)/1) {\n          m.radius+=1;\n          m.chewing = true;\n          user.radius-=2;\n        }\n      } else {\n        // console.log(\"Game over!\")\n        // alert(\"Game Over!\");\n        // setup();\n      }\n      \n      // divide\n      if(m.radius>80) {\n        // sounds[0].play();\n        m.radius=50;\n        m.position.sub(10, 0);\n        marimos.push(new Marimo({\n          position: m.position.copy().add(20, 0),\n          vector: p5.createVector(0, 0),\n          radius: 50,\n          color: m.color,\n        }));\n      }\n      \n      // add bubbles\n      if (p5.random()<0.02){\n        let offset = p5.random(-m.radius, m.radius);\n        bubbles.push({\n          p: m.position.copy().add(offset),\n          v: p5.createVector(0, p5.random(-0.5,-5)),\n          r: p5.random(1,6),\n          opacity: p5.random(0.1, 500)\n        })\n      }\n    })\n    \n    // nutritions...\n    nutritions.filter(n => !n.eaten).forEach(n => {\n      n.draw()\n      \n      // hit user\n      if(user.position.dist(n.position)<(user.radius+n.radius)/1) {\n        user.radius+=2;\n        n.eaten=true;\n      }\n    });\n    \n    // bubbles...\n    bubbles.forEach(b=>{\n      drawSphere(p5.color(255), p5.createVector(b.p.x + p5.noise(b.p.y/20)*b.r*2, b.p.y, 100), b.r);\n        b.p.y+=b.v.y;\n    })\n    bubbles = bubbles.filter(b=>b.p.y>-windowHeight/2)\n    \n    user.update();\n    user.draw();\n\n    props.setNumOfMarimos(marimos.length)\n  }\n\n  class Marimo {\n    constructor(params) {\n      this.position = params.position;\n      this.vector = params.vector;\n      this.radius = params.radius;\n      this.color = params.color;\n      this.chewing = false;\n      this.chewingTimer = chewingTime;\n      // this.colliding=false;\n    }\n    draw() {\n      drawSphere(this.chewing?userColor:this.color, this.position, this.radius);\n    }\n    update() {\n      this.position.add(this.vector)\n      if(p5.frameCount%900===0) this.vector.mult(0.9)\n      \n      // hit the wall\n      if(p5.abs(this.position.x) > windowWidth/2) this.vector.x = -1.3*this.vector.x;\n      if(p5.abs(this.position.y) > windowHeight/2) this.vector.y = -1.3*this.vector.y;\n      \n      // hit the marimos\n      marimos.forEach(m => {\n        if (this!==m){\n          if (this.position.dist(m.position)<(this.radius+m.radius)/1) {\n            //add sounds\n            // \n          }\n\n          if (this.position.dist(m.position)<(this.radius+m.radius)/1.2) {\n            let delta = m.position.copy().sub(this.position)\n            this.vector.sub(delta.mult(0.2).setMag(1))\n            m.vector.add(delta.mult(0.2).setMag(1))\n          }\n        }\n      })\n      \n      const maxVector = 2.4;\n      if(this.vector.x > maxVector) this.vector.x = maxVector;\n      if(this.vector.x < -1*maxVector) this.vector.x = -1*maxVector;\n      if(this.vector.y > maxVector) this.vector.y = maxVector;\n      if(this.vector.y < -1*maxVector) this.vector.y = -1*maxVector;\n    }\n  }\n\n  class Nutrition {\n    constructor(params) {\n      this.position = params.position;\n      this.radius = 5;\n      this.eaten=false;\n    }\n    draw() {\n      drawSphere(nutritionColor, this.position, this.radius);\n    }\n    updatePosition() {\n      this.position.set(p5.random(-windowWidth/2, windowWidth/2), p5.random(-windowHeight/2, windowHeight/2));\n    }\n  }\n\n  class User {\n    constructor(params) {\n      this.position = p5.createVector(-windowWidth/2, -windowHeight/2);\n      this.radius = 9;\n      this.eatenable = true;\n    }\n    draw() {\n      drawSphere(userColor, this.position, this.radius);\n    }\n    update() {\n      const easing = 0.01;\n      \n      let targetX = p5.mouseX - windowWidth/2;\n      let dx = targetX - this.position.x;\n      this.position.x += dx * easing;\n\n      let targetY = p5.mouseY - windowHeight/2;\n      let dy = targetY - this.position.y;\n      this.position.y += dy * easing;\n    }\n  }\n\n  function setCol(shader,uniformName,colStr) {\n    let col = p5.color(colStr);\n    let colArray = col._array;\n    colArray.pop();\n    shader.setUniform(uniformName,colArray);\n  }\n\n  function drawSphere(color, position, radius) {\n    p5.push();\n      setCol(sh,\"u_col\", color);\n      p5.translate(position);\n      p5.sphere(radius);\n    p5.pop();\n  }\n}","var vert = `\n\n    precision highp float;\n    \n    // attributes, in\n    attribute vec3 aPosition;\n    attribute vec3 aNormal;\n    attribute vec2 aTexCoord;\n\n    // attributes, out\n    varying vec3 var_vertPos;\n    varying vec3 var_vertNormal;\n    varying vec2 var_vertTexCoord;\n    \n    // matrices\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n    uniform mat3 uNormalMatrix;\n\n    void main() {\n      vec3 pos = aPosition;  \n      gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(pos, 1.0);\n\n      // set out value\n      var_vertPos      = pos;\n      var_vertNormal   =  aNormal;\n      var_vertTexCoord = aTexCoord;\n    }\n`;\n\n\nvar frag = `\n\nprecision highp float;\n#define PI 3.14159265359\n\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform mat3 uNormalMatrix;\nuniform vec3 u_lightDir;\nuniform vec3 u_col;\n\n//attributes, in\nvarying vec3 var_vertPos;\nvarying vec2 var_vertTexCoord;\nvarying vec3 var_vertNormal;\n\n\nfloat gridGra(in vec2 uv , float gridNum){\n    float scale = gridNum;\n    uv *= scale;\n    uv = fract(uv);\n    float o = abs(uv.y + -0.5)*2.;\n\t\to *= abs(uv.x + -0.5)*2.;\n    return o;\n}\n\nfloat random (in vec2 st) {\n\t\t//return fract(sin(dot(co.xy,vec2(12.9898,78.233))) * 43758.5453);// < - not work on mobile\n   \thighp float a = 12.9898;\n    highp float b = 78.233;\n    highp float c = 43758.5453;\n    highp float dt= dot(st.xy ,vec2(a,b));\n    highp float sn= mod(dt,3.14);\n    return fract(sin(sn) * c);\n}\n\nfloat noise(vec2 st) {\n    vec2 i = vec2(0.);\n\t\ti = floor(st);\n    vec2 f = vec2(0.);\n\t\tf = fract(st);\n    vec2 u =  vec2(0.);\n\t\tu = f*f*(3.0-2.0*f);\n    return mix( mix( random( i + vec2(0.0,0.0) ),\n                     random( i + vec2(1.0,0.0) ), u.x),\n                mix( random( i + vec2(0.0,1.0) ),\n                     random( i + vec2(1.0,1.0) ), u.x), u.y);\n}\n\nvoid main(){\n\t\tvec2 st = gl_FragCoord.xy/u_resolution.x;\n\t\tfloat g = gridGra(st,u_resolution.x/20.);\n\t\tfloat noise = 1.- random(st);\n\t\tfloat noise2 = random(st  + vec2(100.,0));\n\n\t\tvec3 vertNormal = normalize(uNormalMatrix * var_vertNormal);\n    float dot = dot(vertNormal,-normalize(u_lightDir));\n    dot = (dot *.5) + .5;\n\t\t\n    float tone = step(noise,dot*1.2);\n\t\tvec3 col = u_col * tone + (u_col-0.3) * (1.-tone);\n\t\tcol += noise2*.15;\n\n    gl_FragColor = vec4(col,1.0);\n}\n\n`;\n\nexport { vert, frag };","import React, { useState } from \"react\";\n// import logo from './logo.svg';\nimport './App.css';\nimport P5Wrapper from \"react-p5-wrapper\";\nimport sketch from \"./sketches/sketch\";\n// import \"./example.css\";\n\nfunction App() {\n  // const [state, setState] = useState({ rotation: 160 });\n  const [numOfMarimos, setNumOfMarimos] = useState(0);\n\n  return (\n    <>\n      <div className=\"data-box\">\n        Number of Marimos: {numOfMarimos}\n      </div>  \n      <P5Wrapper\n        sketch={sketch} \n        setNumOfMarimos={setNumOfMarimos}\n        // rotation={state.rotation} \n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}