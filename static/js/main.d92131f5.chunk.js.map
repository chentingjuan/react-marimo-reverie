{"version":3,"sources":["sketches/sketch.js","components/Loading.jsx","App.js","reportWebVitals.js","index.js"],"names":["sketch","p5","user","props","windowWidth","windowHeight","colors","split","map","a","marimos","numOfMarimos","nutritions","numOfNutritions","myCustomRedrawAccordingToNewPropsHandler","theProps","setup","createCanvas","noStroke","Math","floor","setInterval","setTimer","timer","i","push","Marimo","position","getRandomPosition","vector","constructor","Vector","random2D","diameter","int","random","color","length","Nutrition","User","draw","eateningTimer","background","frameCount","forEach","m","update","chewing","chewingTimer","filter","n","eaten","dist","toSize","pixelWidth","eatening","copy","add","createVector","setNumOfMarimos","params","this","dividing","matrix","generateMatrix","drawPixelCircle","mult","x","y","delta","sub","setMag","maxVector","dx","mouseX","dy","mouseY","filled","radius","sqrt","pow","distance","fatfilled","maxblocks","ceil","borderColor","lerpColor","color_1","color_2","color_3","color_4","color_5","translate","xp","yp","fill","rect","pop","Loading","useEffect","gsap","to","opacity","duration","id","App","useState","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAGe,SAASA,EAAOC,GAC7B,IAGIC,EAMAC,EATIC,EAA8BH,EAA9BG,YAAaC,EAAiBJ,EAAjBI,aACjBC,EAAS,mDAAmDC,MAAM,KAAKC,KAAI,SAAAC,GAAC,MAAE,IAAIA,KAClFC,EAAU,GAAIC,EAAe,GAAIC,EAAa,GAAIC,EAAkB,EAWxEZ,EAAGa,yCAA2C,SAACC,GAC7CZ,EAAQY,GAMVd,EAAGe,MAAQ,WACTf,EAAGgB,aAAab,EAAaC,GAC7BJ,EAAGiB,WACHP,EAAeQ,KAAKC,MAAMhB,EAAYC,EAAa,KACnDQ,EAAkBM,KAAKC,MAAMhB,EAAYC,EAAa,KAEtDgB,aAAY,kBAAMlB,EAAMmB,SAASnB,EAAMoB,MAAM,KAAI,KAEjDb,EAAQ,GACR,IAAI,IAAIc,EAAE,EAAGA,EAAEb,EAAca,IAC3Bd,EAAQe,KAAK,IAAIC,EAAO,CACtBC,SAAUC,IACVC,OAAQ5B,EAAG6B,YAAYC,OAAOC,WAC9BC,SAvBW,EAuBDhC,EAAGiC,IAAIjC,EAAGkC,OAAO,GAAI,KAC/BC,MAAO9B,EAAOa,KAAKC,MAAMnB,EAAGkC,OAAO7B,EAAO+B,aAI9CzB,EAAW,GACX,IAAI,IAAIY,EAAE,EAAGA,EAAEX,EAAiBW,IAC9BZ,EAAWa,KAAK,IAAIa,EAAU,CAC5BX,SAAUC,OAId1B,EAAO,IAAIqC,GAGbtC,EAAGuC,KAAO,WAKR,GAJGtC,EAAKuC,cAAc,GAAK,EAAGxC,EAAGyC,WAAW,WACvCzC,EAAGyC,WAAW,SAGfzC,EAAG0C,WAAa,KAAO,EAAG,CAC5B,IAAIhB,EAAWC,IACfhB,EAAWa,KAAK,IAAIa,EAAU,CAC5BX,cAKJjB,EAAQkC,SAAQ,SAAAC,GACdA,EAAEC,SACFD,EAAEL,OACCK,EAAEE,SAASF,EAAEG,eACbH,EAAEG,cAAc,IACjBH,EAAEE,SAAQ,EACVF,EAAEG,aA9DY,KAkEhBpC,EAAWqC,QAAO,SAAAC,GAAC,OAAKA,EAAEC,SAAOP,SAAQ,SAAAM,GACpCL,EAAElB,SAASyB,KAAKF,EAAEvB,WAAWkB,EAAEZ,SAASiB,EAAEjB,UAAU,IAErDY,EAAEQ,OAAOR,EAAEZ,SAhEF,GAiETiB,EAAEC,OAAM,MAKTjD,EAAK+B,SAASqB,IACXT,EAAEE,SAAWF,EAAElB,SAASyB,KAAKlD,EAAKyB,WAAWkB,EAAEZ,SAAS/B,EAAK+B,UAAU,IAEzEY,EAAEQ,OAAOR,EAAEZ,SAzEF,GA0ETY,EAAEE,SAAU,EACZ7C,EAAKqD,UAAW,EAEhBrD,EAAKmD,OAAOnD,EAAK+B,SA7ER,IAsFVY,EAAEZ,SAASqB,MAGZT,EAAEQ,OAAOC,IAET5C,EAAQe,KAAK,IAAIC,EAAO,CACtBC,SAAUkB,EAAElB,SAAS6B,OAAOC,IAAI,GAAI,GACpC5B,OAAQ5B,EAAGyD,aAAa,EAAG,GAC3BzB,SAAUqB,GACVlB,MAAOS,EAAET,aAiBfxB,EAAWqC,QAAO,SAAAC,GAAC,OAAKA,EAAEC,SAAOP,SAAQ,SAAAM,GACvCA,EAAEV,OAGCtC,EAAKyB,SAASyB,KAAKF,EAAEvB,WAAWzB,EAAK+B,SAASiB,EAAEjB,UAAU,IAC3D/B,EAAKmD,OAAOnD,EAAK+B,SArHN,GAsHXiB,EAAEC,OAAM,MAWZjD,EAAK4C,SACL5C,EAAKsC,OACFtC,EAAKqD,UAAUrD,EAAKuC,gBACpBvC,EAAKuC,eAAe,IACrBvC,EAAKqD,UAAS,EACdrD,EAAKuC,cA3I+B,IA8ItCtC,EAAMwD,gBAAgBjD,EAAQ2B,SApJC,IAuJ3BX,EAvJ2B,WAwJ/B,WAAYkC,GAAS,oBACnBC,KAAKlC,SAAWiC,EAAOjC,SACvBkC,KAAKhC,OAAS+B,EAAO/B,OACrBgC,KAAK5B,SAAW2B,EAAO3B,SACvB4B,KAAKzB,MAAQwB,EAAOxB,MACpByB,KAAKd,SAAU,EACfc,KAAKb,aAxJW,IAyJhBa,KAAKC,UAAW,EAGhBD,KAAKE,OAASC,EAAeH,KAAKzB,MAAOyB,KAAK5B,UAlKjB,wCAoK/B,WACEgC,EAAgBJ,KAAKE,OAAQF,KAAKlC,YArKL,oBAuK/B,WAAU,IAAD,OACPkC,KAAKlC,SAAS8B,IAAII,KAAKhC,QACpB5B,EAAG0C,WAAW,MAAM,GAAGkB,KAAKhC,OAAOqC,KAAK,KAGxCL,KAAKlC,SAASwC,GAAK,GAAKN,KAAKlC,SAASwC,EAAI/D,KAAayD,KAAKhC,OAAOsC,GAAK,IAAIN,KAAKhC,OAAOsC,IACxFN,KAAKlC,SAASyC,GAAK,GAAKP,KAAKlC,SAASyC,EAAI/D,KAAcwD,KAAKhC,OAAOuC,GAAK,IAAIP,KAAKhC,OAAOuC,GAG5F1D,EAAQkC,SAAQ,SAAAC,GACd,GAAI,IAAOA,IACL,EAAKlB,SAASyB,KAAKP,EAAElB,UAAW,EAAKM,SAASY,EAAEZ,SAKhD,EAAKN,SAASyB,KAAKP,EAAElB,WAAW,EAAKM,SAASY,EAAEZ,UAAU,KAAK,CACjE,IAAIoC,EAAQxB,EAAElB,SAAS6B,OAAOc,IAAI,EAAK3C,UACvC,EAAKE,OAAOyC,IAAID,EAAMH,KAAK,IAAKK,OAAO,IACvC1B,EAAEhB,OAAO4B,IAAIY,EAAMH,KAAK,IAAKK,OAAO,QAK1C,IAAMC,EAAY,IACfX,KAAKhC,OAAOsC,EAAIK,IAAWX,KAAKhC,OAAOsC,EAAIK,GAC3CX,KAAKhC,OAAOsC,GAAI,MAAcN,KAAKhC,OAAOsC,GAAI,KAC9CN,KAAKhC,OAAOuC,EAAII,IAAWX,KAAKhC,OAAOuC,EAAII,GAC3CX,KAAKhC,OAAOuC,GAAI,MAAcP,KAAKhC,OAAOuC,GAAI,OAnMpB,oBAqM/B,SAAOnC,GACL4B,KAAK5B,SAASA,EACd4B,KAAKE,OAASC,EAAeH,KAAKzB,MAAOyB,KAAK5B,cAvMjB,KA2M3BK,EA3M2B,WA4M/B,WAAYsB,GAAS,oBACnBC,KAAKlC,SAAWiC,EAAOjC,SACvBkC,KAAK5B,SAAW,EAChB4B,KAAKzB,MAtMc,OAuMnByB,KAAKV,OAAM,EAEXU,KAAKE,OAASC,EAAeH,KAAKzB,MAAOyB,KAAK5B,UAlNjB,wCAoN/B,WACEgC,EAAgBJ,KAAKE,OAAQF,KAAKlC,cArNL,KA0N3BY,EA1N2B,WA2N/B,WAAYqB,GAAS,oBACnBC,KAAKlC,SAAW1B,EAAGyD,aAAa,EAAG,GACnCG,KAAK5B,SAAWqB,GAEhBO,KAAKzB,MAxNS,UAyNdyB,KAAKN,UAAW,EAChBM,KAAKpB,cA3N+B,GA6NpCoB,KAAKE,OAASC,EAAeH,KAAKzB,MAAOyB,KAAK5B,UAnOjB,wCAqO/B,WAEEgC,EAAgBJ,KAAKE,OAAQF,KAAKlC,YAvOL,oBAyO/B,WACE,IAGI8C,EADUxE,EAAGyE,OACEb,KAAKlC,SAASwC,EACjCN,KAAKlC,SAASwC,GAJC,IAIIM,EAEnB,IACIE,EADU1E,EAAG2E,OACEf,KAAKlC,SAASyC,EACjCP,KAAKlC,SAASyC,GARC,IAQIO,IAlPU,oBAoP/B,SAAO1C,GACL4B,KAAK5B,SAASA,EACd4B,KAAKE,OAASC,EAAeH,KAAKzB,MAAOyB,KAAK5B,cAtPjB,KA0P3BL,EAAoB,kBAAM3B,EAAGyD,aAAazD,EAAGkC,OAAO,EAAG/B,GAAcH,EAAGkC,OAAO,EAAG9B,KAGlFwE,EAAS,SAAEV,EAAGC,EAAGU,GAAR,OADE,SAAEX,EAAGC,GAAL,OAAYjD,KAAK4D,KAAM5D,KAAK6D,IAAIZ,EAAG,GAAMjD,KAAK6D,IAAIb,EAAG,IACnCc,CAASd,EAAGC,IAAMU,GAChDI,EAAY,SAAEf,EAAGC,EAAGU,GACvB,OAAOD,EAAOV,EAAGC,EAAGU,MAClBD,EAAOV,EAAI,EAAGC,EAAGU,IACjBD,EAAOV,EAAI,EAAGC,EAAGU,IACjBD,EAAOV,EAAGC,EAAI,EAAGU,IACjBD,EAAOV,EAAGC,EAAI,EAAGU,IACjBD,EAAOV,EAAI,EAAGC,EAAI,EAAGU,IACrBD,EAAOV,EAAI,EAAGC,EAAI,EAAGU,IACrBD,EAAOV,EAAI,EAAGC,EAAI,EAAGU,IACrBD,EAAOV,EAAI,EAAGC,EAAI,EAAGU,KAInBd,EAAiB,SAAC5B,EAAOH,GAuB7B,IAtBA,IAUIkD,EAVEL,EAAS3D,KAAKiE,KAAKnD,EAjQV,GAiQ+B,EACxCoD,EAAcpF,EAAGqF,UAAUrF,EAAGmC,MAAM,SAAUnC,EAAGmC,MAAMA,GAAQ,IAC/DmD,EAAUtF,EAAGqF,UAAUrF,EAAGmC,MAAM,SAAUnC,EAAGmC,MAAMA,GAAQ,KAC3DoD,EAAUvF,EAAGqF,UAAUrF,EAAGmC,MAAM,SAAUnC,EAAGmC,MAAMA,GAAQ,IAC3DqD,EAAUrD,EACVsD,EAAUzF,EAAGqF,UAAUrF,EAAGmC,MAAM,SAAUnC,EAAGmC,MAAMA,GAAQ,IAC3DuD,EAAU1F,EAAGqF,UAAUrF,EAAGmC,MAAM,SAAUnC,EAAGmC,MAAMA,GAAQ,IAW7D2B,EAAS,GAITvC,EAAI,EACC4C,IAVPe,EADY,EAATL,EAAc,GAAK,EACe,EAAzB3D,KAAKiE,KAAKN,EAAS,IAAU,EAET,EAApB3D,KAAKiE,KAAKN,IAQE,EAAI,EAAGV,GAAKe,EAAY,EAAI,EAAGf,IAAM,CAC7DL,EAAOvC,GAAK,GACV,EACF,IAAK,IAAI2C,GAAKgB,EAAY,EAAI,EAAGhB,GAAKgB,EAAY,EAAI,EAAGhB,IAGpDU,EAAOV,EAAGC,EAAGU,IACXI,EAAUf,EAAGC,EAAGU,IAAaI,EAAUf,GAAKA,EAAI,EAAI,GAAK,GAAIC,EAAGU,IAAWI,EAAUf,EAAGC,GAAKA,EAAI,EAAI,GAAK,GAAIU,GAGvGD,EAAOV,EAAE,EAAGC,EAAE,EAAG,GACzBL,EAAOvC,GAAGC,KAAKkE,GACPd,EAAOV,EAAE,EAAGC,EAAE,EAAGU,EAAO,GAChC7E,EAAGkC,SAAS,GAAM4B,EAAOvC,GAAGC,KAAKkE,GAAW5B,EAAOvC,GAAGC,KAAKiE,GACnDb,EAAOV,EAAE,EAAGC,EAAE,EAAGU,EAAO,GAEhCf,EAAOvC,GAAGC,KAAKiE,GACPb,EAAOV,EAAE,EAAGC,EAAE,EAAGU,EAAO,GAEhC7E,EAAGkC,SAAS,GAAM4B,EAAOvC,GAAGC,KAAKiE,GAAW3B,EAAOvC,GAAGC,KAAKgE,GACnDZ,EAAOV,EAAE,EAAGC,EAAE,EAAGU,EAAO,GAEhCf,EAAOvC,GAAGC,KAAKgE,GACPZ,EAAOV,EAAE,EAAGC,EAAE,EAAGU,EAAO,GAChC7E,EAAGkC,SAAS,GAAM4B,EAAOvC,GAAGC,KAAKgE,GAAW1B,EAAOvC,GAAGC,KAAK+D,GACnDX,EAAOV,EAAE,EAAGC,EAAE,EAAGU,EAAO,GAChCf,EAAOvC,GAAGC,KAAK+D,GAGfzB,EAAOvC,GAAGC,KAAK8D,GApBfxB,EAAOvC,GAAGC,KAAK4D,GAuBjBtB,EAAOvC,GAAGC,KAAK,MASnBD,IAGF,OAAOuC,GAGT,SAASE,EAAgBF,EAAQpC,GAC/B1B,EAAGwB,OAEDxB,EAAG2F,UAAUjE,EAASwC,EAAGxC,EAASyC,GAElC,IAAK,IAAIA,EAAI,EAAGA,EAAIL,EAAO1B,OAAQ+B,IACjC,IAAK,IAAID,EAAI,EAAGA,EAAIJ,EAAO1B,OAAQ8B,IACjC,GAAGJ,EAAOK,GAAGD,GAAI,CACf,IAAM0B,EA9UC,GA8UK1B,EAAIJ,EAAO1B,OAAO,GACxByD,EA/UC,GA+UK1B,EAAIL,EAAO1B,OAAO,GAE9BpC,EAAG8F,KAAKhC,EAAOK,GAAGD,IAClBlE,EAAG+F,KAAKH,EAAIC,EAlVL,GAuVf7F,EAAGgG,O,kBCnUQC,EA/BC,WAwBd,OAvBAC,qBAAU,WACRC,IAAKC,GAAG,mBAAoB,CAC1BC,QAAS,EACTC,SAAU,OAqBZ,qBAAKC,GAAG,qBCKGC,MAzBf,WAEE,MAAwCC,mBAAS,GAAjD,mBAAO/F,EAAP,KAAqBgD,EAArB,KACA,EAA0B+C,mBAAS,MAAnC,mBAAOnF,EAAP,KAAcD,EAAd,KAGA,OACE,qCACE,cAAC,EAAD,IAEA,sBAAKqF,UAAU,WAAf,UACE,oDAAuBhG,KACvB,wCAAWY,QAEb,cAAC,IAAD,CACEvB,OAAQA,EACR2D,gBAAiBA,EACjBpC,MAAOA,EACPD,SAAUA,QCdHsF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d92131f5.chunk.js","sourcesContent":["\n// import { vert, frag } from './tab2';\n\nexport default function sketch(p5) {\n  const { windowWidth, windowHeight } = p5;\n  let colors = \"a2ca3d-81bc3f-5fad41-3e954b-2d8950-1c7c54-48af7e\".split(\"-\").map(a=>\"#\"+a);\n  let marimos = [], numOfMarimos = 10, nutritions = [], numOfNutritions = 5;\n  let user;\n  let bubbles = [], sounds = [];\n  const chewingTime = 300, eateningTime = 20;\n  const userColor = '#219EBC';\n  // const nutritionColor = '#6B705C';\n  const nutritionColor = '#fff';\n  let props;\n  let pixelWidth = 6;\n  let timer = 0;\n\n  p5.myCustomRedrawAccordingToNewPropsHandler = (theProps) => {\n    props = theProps;\n    // if (props.rotation) {\n    //   rotation = (props.rotation * Math.PI) / 180;\n    // }\n  };\n\n  p5.setup = () => {\n    p5.createCanvas(windowWidth, windowHeight);\n    p5.noStroke();\n    numOfMarimos = Math.floor(windowWidth*windowHeight/90000);\n    numOfNutritions = Math.floor(windowWidth*windowHeight/90000);\n\n    setInterval(() => props.setTimer(props.timer+1), 1000);\n    \n    marimos=[];\n    for(let i=0; i<numOfMarimos; i++){\n      marimos.push(new Marimo({\n        position: getRandomPosition(),\n        vector: p5.constructor.Vector.random2D(),\n        diameter: p5.int(p5.random(10, 24)) * pixelWidth,\n        color: colors[Math.floor(p5.random(colors.length))],\n      }));\n    }\n    \n    nutritions=[];\n    for(let i=0; i<numOfNutritions; i++){\n      nutritions.push(new Nutrition({\n        position: getRandomPosition(),\n      }))\n    }\n    \n    user = new User();\n  }\n\n  p5.draw = () => {\n    if(user.eateningTimer%10 < 5) p5.background('#DEF0F7');\n    else p5.background('black');\n    // p5.background('black');\n\n    if (p5.frameCount % 50 === 0) {\n      let position = getRandomPosition();\n      nutritions.push(new Nutrition({\n        position\n      }))\n    }\n    \n    // marimos...\n    marimos.forEach(m => {\n      m.update()\n      m.draw()\n      if(m.chewing) m.chewingTimer--;\n      if(m.chewingTimer<=0) {\n        m.chewing=false;\n        m.chewingTimer = chewingTime;\n      }\n      \n      // hit the nutritions\n      nutritions.filter(n => !n.eaten).forEach(n => {\n        if(m.position.dist(n.position)<(m.diameter+n.diameter)/2) {\n          // m.diameter+=pixelWidth;\n          m.toSize(m.diameter + pixelWidth);\n          n.eaten=true;\n        }\n      })\n      \n      // hit user\n      if(user.diameter>pixelWidth*1) {\n        if(!m.chewing && m.position.dist(user.position)<(m.diameter+user.diameter)/2) {\n          // m.diameter+=pixelWidth;\n          m.toSize(m.diameter + pixelWidth);\n          m.chewing = true;\n          user.eatening = true;\n          // user.diameter-=pixelWidth;\n          user.toSize(user.diameter - pixelWidth);\n        }\n      } else {\n        // console.log(\"Game over!\")\n        // alert(\"Game Over!\");\n        // setup();\n      }\n      \n      // divide\n      if(m.diameter>pixelWidth*28) {\n        // sounds[0].play();\n        // m.diameter=pixelWidth*15;\n        m.toSize(pixelWidth*15);\n        // m.position.sub(10, 0);\n        marimos.push(new Marimo({\n          position: m.position.copy().add(20, 0),\n          vector: p5.createVector(0, 0),\n          diameter: pixelWidth*15,\n          color: m.color,\n        }));\n      }\n      \n      // add bubbles\n      // if (p5.random()<0.02){\n      //   let offset = p5.random(-m.radius, m.radius);\n      //   bubbles.push({\n      //     p: m.position.copy().add(offset),\n      //     v: p5.createVector(0, p5.random(-0.5,-5)),\n      //     r: p5.random(1,6),\n      //     opacity: p5.random(0.1, 500)\n      //   })\n      // }\n    })\n    \n    // nutritions...\n    nutritions.filter(n => !n.eaten).forEach(n => {\n      n.draw()\n      \n      // hit user\n      if(user.position.dist(n.position)<(user.diameter+n.diameter)/2) {\n        user.toSize(user.diameter + pixelWidth);\n        n.eaten=true;\n      }\n    });\n    \n    // bubbles...\n    // bubbles.forEach(b=>{\n    //   drawPixelCircle(p5.color(255), p5.createVector(b.p.x + p5.noise(b.p.y/20)*b.r*2, b.p.y, 100), b.r);\n    //     b.p.y+=b.v.y;\n    // })\n    // bubbles = bubbles.filter(b=>b.p.y>-windowHeight/2)\n    \n    user.update();\n    user.draw();\n    if(user.eatening) user.eateningTimer--;\n    if(user.eateningTimer<=0) {\n      user.eatening=false;\n      user.eateningTimer = eateningTime;\n    }\n\n    props.setNumOfMarimos(marimos.length)\n  }\n\n  class Marimo {\n    constructor(params) {\n      this.position = params.position;\n      this.vector = params.vector;\n      this.diameter = params.diameter;\n      this.color = params.color;\n      this.chewing = false;\n      this.chewingTimer = chewingTime;\n      this.dividing = false;\n      // this.colliding=false;\n\n      this.matrix = generateMatrix(this.color, this.diameter);\n    }\n    draw() {\n      drawPixelCircle(this.matrix, this.position);\n    }\n    update() {\n      this.position.add(this.vector)\n      if(p5.frameCount%900===0) this.vector.mult(0.9)\n      \n      // hit the wall\n      if(this.position.x <= 0 || this.position.x > windowWidth) this.vector.x = -1.3*this.vector.x;\n      if(this.position.y <= 0 || this.position.y > windowHeight) this.vector.y = -1.3*this.vector.y;\n      \n      // hit the marimos\n      marimos.forEach(m => {\n        if (this!==m){\n          if (this.position.dist(m.position)<(this.diameter+m.diameter)/2) {\n            //add sounds\n            // \n          }\n\n          if (this.position.dist(m.position)<(this.diameter+m.diameter)/2.1) {\n            let delta = m.position.copy().sub(this.position)\n            this.vector.sub(delta.mult(0.2).setMag(1))\n            m.vector.add(delta.mult(0.2).setMag(1))\n          }\n        }\n      })\n      \n      const maxVector = 2.4;\n      if(this.vector.x > maxVector) this.vector.x = maxVector;\n      if(this.vector.x < -1*maxVector) this.vector.x = -1*maxVector;\n      if(this.vector.y > maxVector) this.vector.y = maxVector;\n      if(this.vector.y < -1*maxVector) this.vector.y = -1*maxVector;\n    }\n    toSize(diameter) {\n      this.diameter=diameter;\n      this.matrix = generateMatrix(this.color, this.diameter);\n    }\n  }\n\n  class Nutrition {\n    constructor(params) {\n      this.position = params.position;\n      this.diameter = 4;\n      this.color = nutritionColor;\n      this.eaten=false;\n\n      this.matrix = generateMatrix(this.color, this.diameter);\n    }\n    draw() {\n      drawPixelCircle(this.matrix, this.position);\n      // drawPixelCircle(nutritionColor, this.position, this.diameter);\n    }\n  }\n\n  class User {\n    constructor(params) {\n      this.position = p5.createVector(0, 0);\n      this.diameter = pixelWidth*3;\n      // this.eatenable = true;\n      this.color = userColor;\n      this.eatening = false;\n      this.eateningTimer = eateningTime;\n      \n      this.matrix = generateMatrix(this.color, this.diameter);\n    }\n    draw() {\n      // drawPixelCircle(userColor, this.position, this.diameter);\n      drawPixelCircle(this.matrix, this.position);\n    }\n    update() {\n      const easing = 0.01;\n      \n      let targetX = p5.mouseX;\n      let dx = targetX - this.position.x;\n      this.position.x += dx * easing;\n\n      let targetY = p5.mouseY;\n      let dy = targetY - this.position.y;\n      this.position.y += dy * easing;\n    }\n    toSize(diameter) {\n      this.diameter=diameter;\n      this.matrix = generateMatrix(this.color, this.diameter);\n    }\n  }\n\n  const getRandomPosition = () => p5.createVector(p5.random(0, windowWidth), p5.random(0, windowHeight));\n\n  const distance = ( x, y ) => Math.sqrt((Math.pow(y, 2)) + Math.pow(x, 2));\n  const filled = ( x, y, radius ) => distance(x, y) <= radius;\n\tconst\tfatfilled = ( x, y, radius ) => {\n    return filled(x, y, radius) && !(\n      filled(x + 1, y, radius) &&\n      filled(x - 1, y, radius) &&\n      filled(x, y + 1, radius) &&\n      filled(x, y - 1, radius) &&\n      filled(x + 1, y + 1, radius) &&\n      filled(x + 1, y - 1, radius) &&\n      filled(x - 1, y - 1, radius) &&\n      filled(x - 1, y + 1, radius)\n    );\n  };\n\n  const generateMatrix = (color, diameter) => {\n    const radius = Math.ceil(diameter/pixelWidth)/2;\n    const borderColor = p5.lerpColor(p5.color('black'), p5.color(color), 0.6);\n    const color_1 = p5.lerpColor(p5.color('black'), p5.color(color), 0.66);\n    const color_2 = p5.lerpColor(p5.color('black'), p5.color(color), 0.9);\n    const color_3 = color;\n    const color_4 = p5.lerpColor(p5.color('white'), p5.color(color), 0.9);\n    const color_5 = p5.lerpColor(p5.color('white'), p5.color(color), 0.8);\n    // const shadowColor = p5.lerpColor(p5.color('black'), p5.color(color), 0.8);\n    // const lightColor = p5.lerpColor(p5.color('white'), p5.color(color), 0.8);\n\n    let maxblocks;\n    if( (radius * 2) % 2 == 0 ) {\n      maxblocks = Math.ceil(radius - .5) * 2 + 1;\n    } else {\n      maxblocks = Math.ceil(radius) * 2;\n    }\n\n    let matrix = [];\n    // for( let y = -maxblocks / 2 + 1; y <= maxblocks / 2 - 1; y++ ) {\n    //   matrix[y] = [];\n    //   for( let x = -maxblocks / 2 + 1; x <= maxblocks / 2 - 1; x++ ) {\n    let i = 0, j = 0;\n    for( let y = -maxblocks / 2 + 1; y <= maxblocks / 2 - 1; y++ ) {\n      matrix[i] = [];\n      j=0;\n      for( let x = -maxblocks / 2 + 1; x <= maxblocks / 2 - 1; x++ ) {                \n        \n        // let pixelColor = false;\n        if(filled(x, y, radius)) {\n          if(fatfilled(x, y, radius) && !(fatfilled(x + (x > 0 ? 1 : -1), y, radius) && fatfilled(x, y + (y > 0 ? 1 : -1), radius))) {\n            // pixelColor = borderColor;\n            matrix[i].push(borderColor)\n          } else if(filled(x+2, y+2, 1 )) {\n            matrix[i].push(color_5);\n          } else if(filled(x+2, y+2, radius-7 )) {\n            p5.random()<0.3 ? matrix[i].push(color_5) : matrix[i].push(color_4);\n          } else if(filled(x+2, y+2, radius-6 )) {\n            // pixelColor = lightColor;\n            matrix[i].push(color_4)\n          } else if(filled(x+2, y+2, radius-4 )) {\n          // //   pixelColor = p5.random()<0.03 ? shadowColor : color;\n            p5.random()<0.3 ? matrix[i].push(color_4) : matrix[i].push(color_3);\n          } else if(filled(x+1, y+1, radius-3 )) {\n            // pixelColor = color;\n            matrix[i].push(color_3)\n          } else if(filled(x+1, y+1, radius-2 )) {\n            p5.random()<0.3 ? matrix[i].push(color_3) : matrix[i].push(color_2);\n          } else if(filled(x+1, y+1, radius-1 )) {\n            matrix[i].push(color_2)\n          } else {\n            // pixelColor = shadowColor;\n            matrix[i].push(color_1)\n          }\n        } else {\n          matrix[i].push(null)\n        }\n\n        // if(pixelColor) {\n        //   p5.fill(pixelColor);\n        //   p5.rect(xp, yp, pixelWidth);\n        // }\n        j++;\n      }\n      i++;\n    }\n    // console.log(matrix)\n    return matrix;\n  }\n\n  function drawPixelCircle(matrix, position) {\n    p5.push();\n      // p5.circle(position.x, position.y, diameter);\n      p5.translate(position.x, position.y);\n      \n      for( let y = 0; y < matrix.length; y++ ) {\n        for( let x = 0; x < matrix.length; x++ ) {\n          if(matrix[y][x]) {\n            const xp = (x - matrix.length/2)*pixelWidth;\n            const yp = (y - matrix.length/2)*pixelWidth;\n\n            p5.fill(matrix[y][x]);\n            p5.rect(xp, yp, pixelWidth);\n          }\n        }\n      }\n\n    p5.pop();\n  }\n}","import React, { useEffect } from \"react\";\nimport { gsap, Power4 } from \"gsap\";\n\nconst Loading = () => {\n  useEffect(() => {\n    gsap.to(\"#loading-wrapper\", {\n      opacity: 0,\n      duration: 1,\n      // ease: Power4.easeOut,\n    })\n    // var loading_timeline = new TimelineMax();\n    // loading_timeline\n    //   .to(\".logo_item.front\", {\n    //     width: \"100%\",\n    //     duration: 3,\n    //     delay: 0.1,\n    //     ease: Expo.easeInOut,\n    //   })\n    //   .to(\".loading_cover\", {\n    //     opacity: 0,\n    //     pointerEvents: \"none\",\n    //     duration: 1,\n    //     delay: 0.6,\n    //     ease: Power4.easeOut,\n    //   });\n  });\n\n  return (\n    <div id=\"loading-wrapper\">\n\n    </div>\n  )\n}\n\nexport default Loading;","import React, { useState } from \"react\";\n// import logo from './logo.svg';\nimport './App.css';\nimport P5Wrapper from \"react-p5-wrapper\";\nimport sketch from \"./sketches/sketch\";\n// import \"./example.css\";\nimport Loading from \"./components/Loading.jsx\";\n\nfunction App() {\n  // const [state, setState] = useState({ rotation: 160 });\n  const [numOfMarimos, setNumOfMarimos] = useState(0);\n  const [timer, setTimer] = useState(null);\n\n\n  return (\n    <>\n      <Loading />\n\n      <div className=\"data-box\">\n        <p>Number of Marimos: {numOfMarimos}</p>\n        <p>Timer: {timer}</p>\n      </div>  \n      <P5Wrapper\n        sketch={sketch} \n        setNumOfMarimos={setNumOfMarimos}\n        timer={timer}\n        setTimer={setTimer}\n        // rotation={state.rotation} \n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}